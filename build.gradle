plugins {
	id 'java'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
}

group = 'com.etendorx.subapp'
version = "$gradle.ext.version"
sourceCompatibility = JavaVersion.VERSION_17

java {
	sourceCompatibility = '17'
}

ext {
    includeInDasDependencies = true
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
	includeInDasDependencies = true
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	implementation project(path: ':com.etendorx.entities')
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	implementation project(path: ':com.etendorx.das_core')
	implementation project(path: ':com.etendorx.entities')

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-data-rest:2.5.10'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:postgresql:1.17.3'
	testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
	testImplementation(project(path: ':com.etendorx.das')) {
		transitive = false
		exclude group: 'com.etendorx.test.grpc'
	}
	testImplementation(project(':com.etendorx.utils.auth')) {
		exclude group: 'org.slf4j', module: '*'
	}
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

